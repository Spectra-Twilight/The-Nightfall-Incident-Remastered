#ifndef NIGHTFALL_GRID_HPP
#define NIGHTFALL_GRID_HPP

////////////////////////////////////////////////////////////////////////////////
/// Standard Library Includes
////////////////////////////////////////////////////////////////////////////////
#include <array>
#include <cstdint>
#include <list>
#include <memory>

////////////////////////////////////////////////////////////////////////////////
/// SFML Includes
////////////////////////////////////////////////////////////////////////////////
#include <SFML/Graphics.hpp>
#include <SFML/Window.hpp>

////////////////////////////////////////////////////////////////////////////////
/// Nightfall Includes
////////////////////////////////////////////////////////////////////////////////
#include <Nightfall/Program.hpp>
#include <Nightfall/Sector.hpp>

namespace nightfall
{
	////////////////////////////////////////////////////////////////////////////
	/// \brief A Grid of Sectors that comprises the main playing area of a level.
	////////////////////////////////////////////////////////////////////////////
	class Grid: public sf::Drawable
	{
	public:
		////////////////////////////////////////////////////////////////////////
		/// \brief Draw the object to the render target.
		///
		/// \param target Render target to draw to.
		/// \param states Current render states.
		////////////////////////////////////////////////////////////////////////
		void draw(sf::RenderTarget& target, sf::RenderStates states) const;

		////////////////////////////////////////////////////////////////////////
		/// \brief Returns the offset of the Grid relative to the top-leftmost pixel of the render target.
		/// 
		/// \return The offset of the Grid relative to the top-leftmost pixel of the render target.
		////////////////////////////////////////////////////////////////////////
		const sf::Vector2f& position() const;

		////////////////////////////////////////////////////////////////////////
		/// \brief Repositions the Grid to the offset specified by the argument.
		///
		/// \param pos The new offset of the Grid, relative to the top-leftmost pixel of the render target.
		////////////////////////////////////////////////////////////////////////
		void position(sf::Vector2f pos);

		////////////////////////////////////////////////////////////////////////
		/// \brief Repositions the Grid to the offset specified by the argument.
		///
		/// \param x The new horizontal offset of the Grid, relative to the leftmost pixel of the render target.
		/// \param y The new vertical offset of the Grid, relative to the topmost pixel of the render target.
		////////////////////////////////////////////////////////////////////////
		void position(float x, float y);
		
	private:
		////////////////////////////////////////////////////////////////////////
		/// Constant Members
		////////////////////////////////////////////////////////////////////////
		constexpr static uint8_t _num_sectors_horizontal = 16; ///< Number of Sectors in a single row of the Grid.
		constexpr static uint8_t _num_sectors_vertical = 11; ///< Number of Sectors in a single column of the Grid.
		constexpr static uint8_t _sector_gap = 4; ///< Gap between adjacent sectors, measured in pixels.

		////////////////////////////////////////////////////////////////////////
		/// Instance Members
		////////////////////////////////////////////////////////////////////////

		/// Sectors that compose the Grid.
		std::array<std::array<Sector, _num_sectors_horizontal>, _num_sectors_vertical> _sectors;

		std::list<Program> _agent_programs; ///< Agent (player's) programs.
		std::list<Program> _security_programs; ///< Security (AI's) programs.
	};
} // namespace nightfall

#endif // NIGHTFALL_GRID_HPP